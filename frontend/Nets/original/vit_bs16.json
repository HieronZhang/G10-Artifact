[
    [
      1434,
      " - einstein_v2(\" output0[N0, N1] = input0[N1] where N0 in 16; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1000]} })  ",
      "Broadcast",
      [
        [
          151,
          0
        ]
      ]
    ],
    [
      1430,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          149,
          0
        ]
      ]
    ],
    [
      1428,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          148,
          0
        ]
      ]
    ],
    [
      191,
      " - einstein_v2(\" output0[N0, N1] = input0[0, N0, N1] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 50, 384]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1,
          0
        ]
      ]
    ],
    [
      192,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N1, N2] where N0 in 16; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [50, 384]} })  ",
      "Broadcast",
      [
        [
          191,
          0
        ]
      ]
    ],
    [
      186,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N1] where N0 in 16, N2 in 7, N3 in 7; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          3,
          0
        ]
      ]
    ],
    [
      185,
      " - einstein_v2(\" output0[N, F, HO, WO] +=! input0[N, C, -0 + KH * 1 + HO * 32, -0 + KW * 1 + WO * 32] * input1[F, C, KH, KW] where HO in 7, WO in 7; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 3, 224, 224]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 3, 32, 32]} })  ",
      "Convolution",
      [
        [
          184,
          0
        ],
        [
          2,
          0
        ]
      ]
    ],
    [
      187,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] + input1[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 384, 7, 7]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 384, 7, 7]} })  ",
      "Add",
      [
        [
          185,
          0
        ],
        [
          186,
          0
        ]
      ]
    ],
    [
      188,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 7 % 7, N2 / 1 % 7] where N2 in 49;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 384, 7, 7]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          187,
          0
        ]
      ]
    ],
    [
      189,
      " - einstein_v2(\" output0[N0, N2, N1] = input0[N0, N1, N2] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 384, 49]} })  ",
      "Reshape",
      [
        [
          188,
          0
        ]
      ]
    ],
    [
      190,
      " - einstein_v2(\" output0[N0, N1, N2] =  input0[N0, N1 - 0, N2].when(N1 < 1, input1[N0, N1 - 1, N2])  where N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 1, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 49, 384]} })  ",
      "Concat",
      [
        [
          144,
          0
        ],
        [
          189,
          0
        ]
      ]
    ],
    [
      193,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          190,
          0
        ],
        [
          192,
          0
        ]
      ]
    ],
    [
      251,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          9,
          0
        ]
      ]
    ],
    [
      221,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          7,
          0
        ]
      ]
    ],
    [
      218,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          5,
          0
        ]
      ]
    ],
    [
      216,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          4,
          0
        ]
      ]
    ],
    [
      196,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          195,
          0
        ]
      ]
    ],
    [
      194,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          193,
          0
        ]
      ]
    ],
    [
      197,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          194,
          0
        ],
        [
          196,
          0
        ]
      ]
    ],
    [
      198,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          197,
          0
        ]
      ]
    ],
    [
      199,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          198,
          0
        ]
      ]
    ],
    [
      200,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          199,
          0
        ]
      ]
    ],
    [
      201,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          193,
          0
        ],
        [
          200,
          0
        ]
      ]
    ],
    [
      209,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      210,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          209,
          0
        ]
      ]
    ],
    [
      206,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          205,
          0
        ]
      ]
    ],
    [
      202,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      203,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          201,
          0
        ],
        [
          202,
          0
        ]
      ]
    ],
    [
      204,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          203,
          0
        ]
      ]
    ],
    [
      207,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          204,
          0
        ],
        [
          206,
          0
        ]
      ]
    ],
    [
      208,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          207,
          0
        ]
      ]
    ],
    [
      211,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          208,
          0
        ],
        [
          210,
          0
        ]
      ]
    ],
    [
      212,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          211,
          0
        ]
      ]
    ],
    [
      213,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          212,
          0
        ]
      ]
    ],
    [
      214,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          213,
          0
        ]
      ]
    ],
    [
      215,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          201,
          0
        ],
        [
          214,
          0
        ]
      ]
    ],
    [
      217,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          215,
          0
        ],
        [
          216,
          0
        ]
      ]
    ],
    [
      219,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          217,
          0
        ],
        [
          218,
          0
        ]
      ]
    ],
    [
      220,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          219,
          0
        ],
        [
          140,
          0
        ]
      ]
    ],
    [
      222,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          221,
          0
        ],
        [
          220,
          0
        ]
      ]
    ],
    [
      223,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          222,
          0
        ]
      ]
    ],
    [
      226,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          223,
          0
        ]
      ]
    ],
    [
      240,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          226,
          0
        ]
      ]
    ],
    [
      241,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          240,
          0
        ]
      ]
    ],
    [
      237,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      225,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          223,
          0
        ]
      ]
    ],
    [
      227,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          225,
          0
        ]
      ]
    ],
    [
      228,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          227,
          0
        ]
      ]
    ],
    [
      224,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          223,
          0
        ]
      ]
    ],
    [
      229,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          224,
          0
        ]
      ]
    ],
    [
      230,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          229,
          0
        ]
      ]
    ],
    [
      235,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          230,
          0
        ],
        [
          228,
          0
        ]
      ]
    ],
    [
      238,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          235,
          0
        ],
        [
          237,
          0
        ]
      ]
    ],
    [
      1437,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          238,
          0
        ]
      ]
    ],
    [
      1438,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          238,
          0
        ],
        [
          1437,
          0
        ]
      ]
    ],
    [
      1439,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1438,
          0
        ]
      ]
    ],
    [
      1440,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1438,
          0
        ],
        [
          1439,
          0
        ]
      ]
    ],
    [
      246,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1440,
          0
        ],
        [
          241,
          0
        ]
      ]
    ],
    [
      248,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          246,
          0
        ]
      ]
    ],
    [
      249,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          248,
          0
        ]
      ]
    ],
    [
      250,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          249,
          0
        ],
        [
          164,
          0
        ]
      ]
    ],
    [
      252,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          251,
          0
        ],
        [
          250,
          0
        ]
      ]
    ],
    [
      253,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          193,
          0
        ],
        [
          252,
          0
        ]
      ]
    ],
    [
      292,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          15,
          0
        ]
      ]
    ],
    [
      289,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      281,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          13,
          0
        ]
      ]
    ],
    [
      278,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          11,
          0
        ]
      ]
    ],
    [
      276,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          10,
          0
        ]
      ]
    ],
    [
      256,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          255,
          0
        ]
      ]
    ],
    [
      254,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          253,
          0
        ]
      ]
    ],
    [
      257,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          254,
          0
        ],
        [
          256,
          0
        ]
      ]
    ],
    [
      258,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          257,
          0
        ]
      ]
    ],
    [
      259,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          258,
          0
        ]
      ]
    ],
    [
      260,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          259,
          0
        ]
      ]
    ],
    [
      261,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          253,
          0
        ],
        [
          260,
          0
        ]
      ]
    ],
    [
      269,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      270,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          269,
          0
        ]
      ]
    ],
    [
      266,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          265,
          0
        ]
      ]
    ],
    [
      262,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      263,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          261,
          0
        ],
        [
          262,
          0
        ]
      ]
    ],
    [
      264,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          263,
          0
        ]
      ]
    ],
    [
      267,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          264,
          0
        ],
        [
          266,
          0
        ]
      ]
    ],
    [
      268,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          267,
          0
        ]
      ]
    ],
    [
      271,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          268,
          0
        ],
        [
          270,
          0
        ]
      ]
    ],
    [
      272,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          271,
          0
        ]
      ]
    ],
    [
      273,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          272,
          0
        ]
      ]
    ],
    [
      274,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          273,
          0
        ]
      ]
    ],
    [
      275,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          261,
          0
        ],
        [
          274,
          0
        ]
      ]
    ],
    [
      277,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          275,
          0
        ],
        [
          276,
          0
        ]
      ]
    ],
    [
      279,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          277,
          0
        ],
        [
          278,
          0
        ]
      ]
    ],
    [
      280,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          279,
          0
        ],
        [
          110,
          0
        ]
      ]
    ],
    [
      282,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          281,
          0
        ],
        [
          280,
          0
        ]
      ]
    ],
    [
      286,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      283,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      284,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          282,
          0
        ],
        [
          283,
          0
        ]
      ]
    ],
    [
      285,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          284,
          0
        ]
      ]
    ],
    [
      287,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          285,
          0
        ],
        [
          286,
          0
        ]
      ]
    ],
    [
      288,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          282,
          0
        ],
        [
          287,
          0
        ]
      ]
    ],
    [
      290,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          288,
          0
        ],
        [
          289,
          0
        ]
      ]
    ],
    [
      291,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          290,
          0
        ],
        [
          14,
          0
        ]
      ]
    ],
    [
      293,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          292,
          0
        ],
        [
          291,
          0
        ]
      ]
    ],
    [
      294,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          253,
          0
        ],
        [
          293,
          0
        ]
      ]
    ],
    [
      352,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          21,
          0
        ]
      ]
    ],
    [
      322,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          19,
          0
        ]
      ]
    ],
    [
      319,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          17,
          0
        ]
      ]
    ],
    [
      317,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          16,
          0
        ]
      ]
    ],
    [
      297,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          296,
          0
        ]
      ]
    ],
    [
      295,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          294,
          0
        ]
      ]
    ],
    [
      298,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          295,
          0
        ],
        [
          297,
          0
        ]
      ]
    ],
    [
      299,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          298,
          0
        ]
      ]
    ],
    [
      300,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          299,
          0
        ]
      ]
    ],
    [
      301,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          300,
          0
        ]
      ]
    ],
    [
      302,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          294,
          0
        ],
        [
          301,
          0
        ]
      ]
    ],
    [
      310,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      311,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          310,
          0
        ]
      ]
    ],
    [
      307,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          306,
          0
        ]
      ]
    ],
    [
      303,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      304,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          302,
          0
        ],
        [
          303,
          0
        ]
      ]
    ],
    [
      305,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          304,
          0
        ]
      ]
    ],
    [
      308,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          305,
          0
        ],
        [
          307,
          0
        ]
      ]
    ],
    [
      309,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          308,
          0
        ]
      ]
    ],
    [
      312,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          309,
          0
        ],
        [
          311,
          0
        ]
      ]
    ],
    [
      313,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          312,
          0
        ]
      ]
    ],
    [
      314,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          313,
          0
        ]
      ]
    ],
    [
      315,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          314,
          0
        ]
      ]
    ],
    [
      316,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          302,
          0
        ],
        [
          315,
          0
        ]
      ]
    ],
    [
      318,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          316,
          0
        ],
        [
          317,
          0
        ]
      ]
    ],
    [
      320,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          318,
          0
        ],
        [
          319,
          0
        ]
      ]
    ],
    [
      321,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          320,
          0
        ],
        [
          66,
          0
        ]
      ]
    ],
    [
      323,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          322,
          0
        ],
        [
          321,
          0
        ]
      ]
    ],
    [
      324,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          323,
          0
        ]
      ]
    ],
    [
      327,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          324,
          0
        ]
      ]
    ],
    [
      341,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          327,
          0
        ]
      ]
    ],
    [
      342,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          341,
          0
        ]
      ]
    ],
    [
      338,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      326,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          324,
          0
        ]
      ]
    ],
    [
      328,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          326,
          0
        ]
      ]
    ],
    [
      329,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          328,
          0
        ]
      ]
    ],
    [
      325,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          324,
          0
        ]
      ]
    ],
    [
      330,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          325,
          0
        ]
      ]
    ],
    [
      331,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          330,
          0
        ]
      ]
    ],
    [
      336,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          331,
          0
        ],
        [
          329,
          0
        ]
      ]
    ],
    [
      339,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          336,
          0
        ],
        [
          338,
          0
        ]
      ]
    ],
    [
      1441,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          339,
          0
        ]
      ]
    ],
    [
      1442,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          339,
          0
        ],
        [
          1441,
          0
        ]
      ]
    ],
    [
      1443,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1442,
          0
        ]
      ]
    ],
    [
      1444,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1442,
          0
        ],
        [
          1443,
          0
        ]
      ]
    ],
    [
      347,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1444,
          0
        ],
        [
          342,
          0
        ]
      ]
    ],
    [
      349,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          347,
          0
        ]
      ]
    ],
    [
      350,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          349,
          0
        ]
      ]
    ],
    [
      351,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          350,
          0
        ],
        [
          126,
          0
        ]
      ]
    ],
    [
      353,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          352,
          0
        ],
        [
          351,
          0
        ]
      ]
    ],
    [
      354,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          294,
          0
        ],
        [
          353,
          0
        ]
      ]
    ],
    [
      393,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          27,
          0
        ]
      ]
    ],
    [
      390,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      382,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          25,
          0
        ]
      ]
    ],
    [
      379,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          23,
          0
        ]
      ]
    ],
    [
      377,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          22,
          0
        ]
      ]
    ],
    [
      357,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          356,
          0
        ]
      ]
    ],
    [
      355,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          354,
          0
        ]
      ]
    ],
    [
      358,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          355,
          0
        ],
        [
          357,
          0
        ]
      ]
    ],
    [
      359,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          358,
          0
        ]
      ]
    ],
    [
      360,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          359,
          0
        ]
      ]
    ],
    [
      361,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          360,
          0
        ]
      ]
    ],
    [
      362,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          354,
          0
        ],
        [
          361,
          0
        ]
      ]
    ],
    [
      370,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      371,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          370,
          0
        ]
      ]
    ],
    [
      367,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          366,
          0
        ]
      ]
    ],
    [
      363,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      364,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          362,
          0
        ],
        [
          363,
          0
        ]
      ]
    ],
    [
      365,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          364,
          0
        ]
      ]
    ],
    [
      368,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          365,
          0
        ],
        [
          367,
          0
        ]
      ]
    ],
    [
      369,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          368,
          0
        ]
      ]
    ],
    [
      372,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          369,
          0
        ],
        [
          371,
          0
        ]
      ]
    ],
    [
      373,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          372,
          0
        ]
      ]
    ],
    [
      374,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          373,
          0
        ]
      ]
    ],
    [
      375,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          374,
          0
        ]
      ]
    ],
    [
      376,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          362,
          0
        ],
        [
          375,
          0
        ]
      ]
    ],
    [
      378,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          376,
          0
        ],
        [
          377,
          0
        ]
      ]
    ],
    [
      380,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          378,
          0
        ],
        [
          379,
          0
        ]
      ]
    ],
    [
      381,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          380,
          0
        ],
        [
          62,
          0
        ]
      ]
    ],
    [
      383,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          382,
          0
        ],
        [
          381,
          0
        ]
      ]
    ],
    [
      387,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      384,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      385,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          383,
          0
        ],
        [
          384,
          0
        ]
      ]
    ],
    [
      386,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          385,
          0
        ]
      ]
    ],
    [
      388,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          386,
          0
        ],
        [
          387,
          0
        ]
      ]
    ],
    [
      389,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          383,
          0
        ],
        [
          388,
          0
        ]
      ]
    ],
    [
      391,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          389,
          0
        ],
        [
          390,
          0
        ]
      ]
    ],
    [
      392,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          391,
          0
        ],
        [
          54,
          0
        ]
      ]
    ],
    [
      394,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          393,
          0
        ],
        [
          392,
          0
        ]
      ]
    ],
    [
      395,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          354,
          0
        ],
        [
          394,
          0
        ]
      ]
    ],
    [
      453,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          33,
          0
        ]
      ]
    ],
    [
      423,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          31,
          0
        ]
      ]
    ],
    [
      420,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          29,
          0
        ]
      ]
    ],
    [
      418,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          28,
          0
        ]
      ]
    ],
    [
      398,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          397,
          0
        ]
      ]
    ],
    [
      396,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          395,
          0
        ]
      ]
    ],
    [
      399,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          396,
          0
        ],
        [
          398,
          0
        ]
      ]
    ],
    [
      400,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          399,
          0
        ]
      ]
    ],
    [
      401,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          400,
          0
        ]
      ]
    ],
    [
      402,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          401,
          0
        ]
      ]
    ],
    [
      403,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          395,
          0
        ],
        [
          402,
          0
        ]
      ]
    ],
    [
      411,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      412,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          411,
          0
        ]
      ]
    ],
    [
      408,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          407,
          0
        ]
      ]
    ],
    [
      404,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      405,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          403,
          0
        ],
        [
          404,
          0
        ]
      ]
    ],
    [
      406,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          405,
          0
        ]
      ]
    ],
    [
      409,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          406,
          0
        ],
        [
          408,
          0
        ]
      ]
    ],
    [
      410,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          409,
          0
        ]
      ]
    ],
    [
      413,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          410,
          0
        ],
        [
          412,
          0
        ]
      ]
    ],
    [
      414,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          413,
          0
        ]
      ]
    ],
    [
      415,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          414,
          0
        ]
      ]
    ],
    [
      416,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          415,
          0
        ]
      ]
    ],
    [
      417,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          403,
          0
        ],
        [
          416,
          0
        ]
      ]
    ],
    [
      419,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          417,
          0
        ],
        [
          418,
          0
        ]
      ]
    ],
    [
      421,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          419,
          0
        ],
        [
          420,
          0
        ]
      ]
    ],
    [
      422,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          421,
          0
        ],
        [
          165,
          0
        ]
      ]
    ],
    [
      424,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          423,
          0
        ],
        [
          422,
          0
        ]
      ]
    ],
    [
      425,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          424,
          0
        ]
      ]
    ],
    [
      428,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          425,
          0
        ]
      ]
    ],
    [
      442,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          428,
          0
        ]
      ]
    ],
    [
      443,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          442,
          0
        ]
      ]
    ],
    [
      439,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      427,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          425,
          0
        ]
      ]
    ],
    [
      429,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          427,
          0
        ]
      ]
    ],
    [
      430,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          429,
          0
        ]
      ]
    ],
    [
      426,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          425,
          0
        ]
      ]
    ],
    [
      431,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          426,
          0
        ]
      ]
    ],
    [
      432,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          431,
          0
        ]
      ]
    ],
    [
      437,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          432,
          0
        ],
        [
          430,
          0
        ]
      ]
    ],
    [
      440,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          437,
          0
        ],
        [
          439,
          0
        ]
      ]
    ],
    [
      1445,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          440,
          0
        ]
      ]
    ],
    [
      1446,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          440,
          0
        ],
        [
          1445,
          0
        ]
      ]
    ],
    [
      1447,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1446,
          0
        ]
      ]
    ],
    [
      1448,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1446,
          0
        ],
        [
          1447,
          0
        ]
      ]
    ],
    [
      448,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1448,
          0
        ],
        [
          443,
          0
        ]
      ]
    ],
    [
      450,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          448,
          0
        ]
      ]
    ],
    [
      451,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          450,
          0
        ]
      ]
    ],
    [
      452,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          451,
          0
        ],
        [
          56,
          0
        ]
      ]
    ],
    [
      454,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          453,
          0
        ],
        [
          452,
          0
        ]
      ]
    ],
    [
      455,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          395,
          0
        ],
        [
          454,
          0
        ]
      ]
    ],
    [
      494,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          39,
          0
        ]
      ]
    ],
    [
      491,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      483,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          37,
          0
        ]
      ]
    ],
    [
      480,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          35,
          0
        ]
      ]
    ],
    [
      478,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          34,
          0
        ]
      ]
    ],
    [
      458,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          457,
          0
        ]
      ]
    ],
    [
      456,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          455,
          0
        ]
      ]
    ],
    [
      459,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          456,
          0
        ],
        [
          458,
          0
        ]
      ]
    ],
    [
      460,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          459,
          0
        ]
      ]
    ],
    [
      461,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          460,
          0
        ]
      ]
    ],
    [
      462,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          461,
          0
        ]
      ]
    ],
    [
      463,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          455,
          0
        ],
        [
          462,
          0
        ]
      ]
    ],
    [
      471,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      472,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          471,
          0
        ]
      ]
    ],
    [
      468,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          467,
          0
        ]
      ]
    ],
    [
      464,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      465,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          463,
          0
        ],
        [
          464,
          0
        ]
      ]
    ],
    [
      466,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          465,
          0
        ]
      ]
    ],
    [
      469,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          466,
          0
        ],
        [
          468,
          0
        ]
      ]
    ],
    [
      470,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          469,
          0
        ]
      ]
    ],
    [
      473,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          470,
          0
        ],
        [
          472,
          0
        ]
      ]
    ],
    [
      474,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          473,
          0
        ]
      ]
    ],
    [
      475,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          474,
          0
        ]
      ]
    ],
    [
      476,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          475,
          0
        ]
      ]
    ],
    [
      477,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          463,
          0
        ],
        [
          476,
          0
        ]
      ]
    ],
    [
      479,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          477,
          0
        ],
        [
          478,
          0
        ]
      ]
    ],
    [
      481,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          479,
          0
        ],
        [
          480,
          0
        ]
      ]
    ],
    [
      482,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          481,
          0
        ],
        [
          116,
          0
        ]
      ]
    ],
    [
      484,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          483,
          0
        ],
        [
          482,
          0
        ]
      ]
    ],
    [
      488,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      485,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      486,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          484,
          0
        ],
        [
          485,
          0
        ]
      ]
    ],
    [
      487,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          486,
          0
        ]
      ]
    ],
    [
      489,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          487,
          0
        ],
        [
          488,
          0
        ]
      ]
    ],
    [
      490,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          484,
          0
        ],
        [
          489,
          0
        ]
      ]
    ],
    [
      492,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          490,
          0
        ],
        [
          491,
          0
        ]
      ]
    ],
    [
      493,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          492,
          0
        ],
        [
          120,
          0
        ]
      ]
    ],
    [
      495,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          494,
          0
        ],
        [
          493,
          0
        ]
      ]
    ],
    [
      496,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          455,
          0
        ],
        [
          495,
          0
        ]
      ]
    ],
    [
      554,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          45,
          0
        ]
      ]
    ],
    [
      524,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          43,
          0
        ]
      ]
    ],
    [
      521,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          41,
          0
        ]
      ]
    ],
    [
      519,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          40,
          0
        ]
      ]
    ],
    [
      499,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          498,
          0
        ]
      ]
    ],
    [
      497,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          496,
          0
        ]
      ]
    ],
    [
      500,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          497,
          0
        ],
        [
          499,
          0
        ]
      ]
    ],
    [
      501,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          500,
          0
        ]
      ]
    ],
    [
      502,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          501,
          0
        ]
      ]
    ],
    [
      503,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          502,
          0
        ]
      ]
    ],
    [
      504,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          496,
          0
        ],
        [
          503,
          0
        ]
      ]
    ],
    [
      512,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      513,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          512,
          0
        ]
      ]
    ],
    [
      509,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          508,
          0
        ]
      ]
    ],
    [
      505,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      506,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          504,
          0
        ],
        [
          505,
          0
        ]
      ]
    ],
    [
      507,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          506,
          0
        ]
      ]
    ],
    [
      510,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          507,
          0
        ],
        [
          509,
          0
        ]
      ]
    ],
    [
      511,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          510,
          0
        ]
      ]
    ],
    [
      514,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          511,
          0
        ],
        [
          513,
          0
        ]
      ]
    ],
    [
      515,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          514,
          0
        ]
      ]
    ],
    [
      516,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          515,
          0
        ]
      ]
    ],
    [
      517,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          516,
          0
        ]
      ]
    ],
    [
      518,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          504,
          0
        ],
        [
          517,
          0
        ]
      ]
    ],
    [
      520,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          518,
          0
        ],
        [
          519,
          0
        ]
      ]
    ],
    [
      522,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          520,
          0
        ],
        [
          521,
          0
        ]
      ]
    ],
    [
      523,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          522,
          0
        ],
        [
          161,
          0
        ]
      ]
    ],
    [
      525,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          524,
          0
        ],
        [
          523,
          0
        ]
      ]
    ],
    [
      526,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          525,
          0
        ]
      ]
    ],
    [
      529,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          526,
          0
        ]
      ]
    ],
    [
      543,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          529,
          0
        ]
      ]
    ],
    [
      544,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          543,
          0
        ]
      ]
    ],
    [
      540,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      528,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          526,
          0
        ]
      ]
    ],
    [
      530,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          528,
          0
        ]
      ]
    ],
    [
      531,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          530,
          0
        ]
      ]
    ],
    [
      527,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          526,
          0
        ]
      ]
    ],
    [
      532,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          527,
          0
        ]
      ]
    ],
    [
      533,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          532,
          0
        ]
      ]
    ],
    [
      538,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          533,
          0
        ],
        [
          531,
          0
        ]
      ]
    ],
    [
      541,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          538,
          0
        ],
        [
          540,
          0
        ]
      ]
    ],
    [
      1449,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          541,
          0
        ]
      ]
    ],
    [
      1450,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          541,
          0
        ],
        [
          1449,
          0
        ]
      ]
    ],
    [
      1451,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1450,
          0
        ]
      ]
    ],
    [
      1452,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1450,
          0
        ],
        [
          1451,
          0
        ]
      ]
    ],
    [
      549,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1452,
          0
        ],
        [
          544,
          0
        ]
      ]
    ],
    [
      551,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          549,
          0
        ]
      ]
    ],
    [
      552,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          551,
          0
        ]
      ]
    ],
    [
      553,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          552,
          0
        ],
        [
          74,
          0
        ]
      ]
    ],
    [
      555,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          554,
          0
        ],
        [
          553,
          0
        ]
      ]
    ],
    [
      556,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          496,
          0
        ],
        [
          555,
          0
        ]
      ]
    ],
    [
      595,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          51,
          0
        ]
      ]
    ],
    [
      592,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      584,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          49,
          0
        ]
      ]
    ],
    [
      581,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          47,
          0
        ]
      ]
    ],
    [
      579,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          46,
          0
        ]
      ]
    ],
    [
      559,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          558,
          0
        ]
      ]
    ],
    [
      557,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          556,
          0
        ]
      ]
    ],
    [
      560,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          557,
          0
        ],
        [
          559,
          0
        ]
      ]
    ],
    [
      561,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          560,
          0
        ]
      ]
    ],
    [
      562,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          561,
          0
        ]
      ]
    ],
    [
      563,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          562,
          0
        ]
      ]
    ],
    [
      564,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          556,
          0
        ],
        [
          563,
          0
        ]
      ]
    ],
    [
      572,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      573,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          572,
          0
        ]
      ]
    ],
    [
      569,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          568,
          0
        ]
      ]
    ],
    [
      565,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      566,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          564,
          0
        ],
        [
          565,
          0
        ]
      ]
    ],
    [
      567,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          566,
          0
        ]
      ]
    ],
    [
      570,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          567,
          0
        ],
        [
          569,
          0
        ]
      ]
    ],
    [
      571,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          570,
          0
        ]
      ]
    ],
    [
      574,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          571,
          0
        ],
        [
          573,
          0
        ]
      ]
    ],
    [
      575,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          574,
          0
        ]
      ]
    ],
    [
      576,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          575,
          0
        ]
      ]
    ],
    [
      577,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          576,
          0
        ]
      ]
    ],
    [
      578,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          564,
          0
        ],
        [
          577,
          0
        ]
      ]
    ],
    [
      580,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          578,
          0
        ],
        [
          579,
          0
        ]
      ]
    ],
    [
      582,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          580,
          0
        ],
        [
          581,
          0
        ]
      ]
    ],
    [
      583,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          582,
          0
        ],
        [
          162,
          0
        ]
      ]
    ],
    [
      585,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          584,
          0
        ],
        [
          583,
          0
        ]
      ]
    ],
    [
      589,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      586,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      587,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          585,
          0
        ],
        [
          586,
          0
        ]
      ]
    ],
    [
      588,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          587,
          0
        ]
      ]
    ],
    [
      590,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          588,
          0
        ],
        [
          589,
          0
        ]
      ]
    ],
    [
      591,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          585,
          0
        ],
        [
          590,
          0
        ]
      ]
    ],
    [
      593,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          591,
          0
        ],
        [
          592,
          0
        ]
      ]
    ],
    [
      594,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          593,
          0
        ],
        [
          90,
          0
        ]
      ]
    ],
    [
      596,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          595,
          0
        ],
        [
          594,
          0
        ]
      ]
    ],
    [
      597,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          556,
          0
        ],
        [
          596,
          0
        ]
      ]
    ],
    [
      655,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          57,
          0
        ]
      ]
    ],
    [
      625,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          55,
          0
        ]
      ]
    ],
    [
      622,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          53,
          0
        ]
      ]
    ],
    [
      620,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          52,
          0
        ]
      ]
    ],
    [
      600,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          599,
          0
        ]
      ]
    ],
    [
      598,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          597,
          0
        ]
      ]
    ],
    [
      601,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          598,
          0
        ],
        [
          600,
          0
        ]
      ]
    ],
    [
      602,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          601,
          0
        ]
      ]
    ],
    [
      603,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          602,
          0
        ]
      ]
    ],
    [
      604,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          603,
          0
        ]
      ]
    ],
    [
      605,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          597,
          0
        ],
        [
          604,
          0
        ]
      ]
    ],
    [
      613,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      614,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          613,
          0
        ]
      ]
    ],
    [
      610,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          609,
          0
        ]
      ]
    ],
    [
      606,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      607,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          605,
          0
        ],
        [
          606,
          0
        ]
      ]
    ],
    [
      608,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          607,
          0
        ]
      ]
    ],
    [
      611,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          608,
          0
        ],
        [
          610,
          0
        ]
      ]
    ],
    [
      612,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          611,
          0
        ]
      ]
    ],
    [
      615,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          612,
          0
        ],
        [
          614,
          0
        ]
      ]
    ],
    [
      616,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          615,
          0
        ]
      ]
    ],
    [
      617,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          616,
          0
        ]
      ]
    ],
    [
      618,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          617,
          0
        ]
      ]
    ],
    [
      619,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          605,
          0
        ],
        [
          618,
          0
        ]
      ]
    ],
    [
      621,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          619,
          0
        ],
        [
          620,
          0
        ]
      ]
    ],
    [
      623,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          621,
          0
        ],
        [
          622,
          0
        ]
      ]
    ],
    [
      624,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          623,
          0
        ],
        [
          96,
          0
        ]
      ]
    ],
    [
      626,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          625,
          0
        ],
        [
          624,
          0
        ]
      ]
    ],
    [
      627,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          626,
          0
        ]
      ]
    ],
    [
      630,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          627,
          0
        ]
      ]
    ],
    [
      644,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          630,
          0
        ]
      ]
    ],
    [
      645,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          644,
          0
        ]
      ]
    ],
    [
      641,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      629,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          627,
          0
        ]
      ]
    ],
    [
      631,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          629,
          0
        ]
      ]
    ],
    [
      632,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          631,
          0
        ]
      ]
    ],
    [
      628,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          627,
          0
        ]
      ]
    ],
    [
      633,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          628,
          0
        ]
      ]
    ],
    [
      634,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          633,
          0
        ]
      ]
    ],
    [
      639,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          634,
          0
        ],
        [
          632,
          0
        ]
      ]
    ],
    [
      642,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          639,
          0
        ],
        [
          641,
          0
        ]
      ]
    ],
    [
      1453,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          642,
          0
        ]
      ]
    ],
    [
      1454,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          642,
          0
        ],
        [
          1453,
          0
        ]
      ]
    ],
    [
      1455,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1454,
          0
        ]
      ]
    ],
    [
      1456,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1454,
          0
        ],
        [
          1455,
          0
        ]
      ]
    ],
    [
      650,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1456,
          0
        ],
        [
          645,
          0
        ]
      ]
    ],
    [
      652,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          650,
          0
        ]
      ]
    ],
    [
      653,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          652,
          0
        ]
      ]
    ],
    [
      654,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          653,
          0
        ],
        [
          132,
          0
        ]
      ]
    ],
    [
      656,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          655,
          0
        ],
        [
          654,
          0
        ]
      ]
    ],
    [
      657,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          597,
          0
        ],
        [
          656,
          0
        ]
      ]
    ],
    [
      696,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          63,
          0
        ]
      ]
    ],
    [
      693,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      685,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          61,
          0
        ]
      ]
    ],
    [
      682,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          59,
          0
        ]
      ]
    ],
    [
      680,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          58,
          0
        ]
      ]
    ],
    [
      660,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          659,
          0
        ]
      ]
    ],
    [
      658,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          657,
          0
        ]
      ]
    ],
    [
      661,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          658,
          0
        ],
        [
          660,
          0
        ]
      ]
    ],
    [
      662,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          661,
          0
        ]
      ]
    ],
    [
      663,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          662,
          0
        ]
      ]
    ],
    [
      664,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          663,
          0
        ]
      ]
    ],
    [
      665,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          657,
          0
        ],
        [
          664,
          0
        ]
      ]
    ],
    [
      673,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      674,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          673,
          0
        ]
      ]
    ],
    [
      670,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          669,
          0
        ]
      ]
    ],
    [
      666,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      667,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          665,
          0
        ],
        [
          666,
          0
        ]
      ]
    ],
    [
      668,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          667,
          0
        ]
      ]
    ],
    [
      671,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          668,
          0
        ],
        [
          670,
          0
        ]
      ]
    ],
    [
      672,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          671,
          0
        ]
      ]
    ],
    [
      675,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          672,
          0
        ],
        [
          674,
          0
        ]
      ]
    ],
    [
      676,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          675,
          0
        ]
      ]
    ],
    [
      677,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          676,
          0
        ]
      ]
    ],
    [
      678,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          677,
          0
        ]
      ]
    ],
    [
      679,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          665,
          0
        ],
        [
          678,
          0
        ]
      ]
    ],
    [
      681,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          679,
          0
        ],
        [
          680,
          0
        ]
      ]
    ],
    [
      683,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          681,
          0
        ],
        [
          682,
          0
        ]
      ]
    ],
    [
      684,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          683,
          0
        ],
        [
          134,
          0
        ]
      ]
    ],
    [
      686,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          685,
          0
        ],
        [
          684,
          0
        ]
      ]
    ],
    [
      690,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      687,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      688,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          686,
          0
        ],
        [
          687,
          0
        ]
      ]
    ],
    [
      689,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          688,
          0
        ]
      ]
    ],
    [
      691,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          689,
          0
        ],
        [
          690,
          0
        ]
      ]
    ],
    [
      692,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          686,
          0
        ],
        [
          691,
          0
        ]
      ]
    ],
    [
      694,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          692,
          0
        ],
        [
          693,
          0
        ]
      ]
    ],
    [
      695,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          694,
          0
        ],
        [
          138,
          0
        ]
      ]
    ],
    [
      697,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          696,
          0
        ],
        [
          695,
          0
        ]
      ]
    ],
    [
      698,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          657,
          0
        ],
        [
          697,
          0
        ]
      ]
    ],
    [
      756,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          69,
          0
        ]
      ]
    ],
    [
      726,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          67,
          0
        ]
      ]
    ],
    [
      723,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          65,
          0
        ]
      ]
    ],
    [
      721,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          64,
          0
        ]
      ]
    ],
    [
      701,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          700,
          0
        ]
      ]
    ],
    [
      699,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          698,
          0
        ]
      ]
    ],
    [
      702,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          699,
          0
        ],
        [
          701,
          0
        ]
      ]
    ],
    [
      703,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          702,
          0
        ]
      ]
    ],
    [
      704,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          703,
          0
        ]
      ]
    ],
    [
      705,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          704,
          0
        ]
      ]
    ],
    [
      706,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          698,
          0
        ],
        [
          705,
          0
        ]
      ]
    ],
    [
      714,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      715,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          714,
          0
        ]
      ]
    ],
    [
      711,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          710,
          0
        ]
      ]
    ],
    [
      707,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      708,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          706,
          0
        ],
        [
          707,
          0
        ]
      ]
    ],
    [
      709,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          708,
          0
        ]
      ]
    ],
    [
      712,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          709,
          0
        ],
        [
          711,
          0
        ]
      ]
    ],
    [
      713,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          712,
          0
        ]
      ]
    ],
    [
      716,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          713,
          0
        ],
        [
          715,
          0
        ]
      ]
    ],
    [
      717,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          716,
          0
        ]
      ]
    ],
    [
      718,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          717,
          0
        ]
      ]
    ],
    [
      719,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          718,
          0
        ]
      ]
    ],
    [
      720,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          706,
          0
        ],
        [
          719,
          0
        ]
      ]
    ],
    [
      722,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          720,
          0
        ],
        [
          721,
          0
        ]
      ]
    ],
    [
      724,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          722,
          0
        ],
        [
          723,
          0
        ]
      ]
    ],
    [
      725,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          724,
          0
        ],
        [
          128,
          0
        ]
      ]
    ],
    [
      727,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          726,
          0
        ],
        [
          725,
          0
        ]
      ]
    ],
    [
      728,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          727,
          0
        ]
      ]
    ],
    [
      731,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          728,
          0
        ]
      ]
    ],
    [
      745,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          731,
          0
        ]
      ]
    ],
    [
      746,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          745,
          0
        ]
      ]
    ],
    [
      742,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      730,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          728,
          0
        ]
      ]
    ],
    [
      732,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          730,
          0
        ]
      ]
    ],
    [
      733,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          732,
          0
        ]
      ]
    ],
    [
      729,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          728,
          0
        ]
      ]
    ],
    [
      734,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          729,
          0
        ]
      ]
    ],
    [
      735,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          734,
          0
        ]
      ]
    ],
    [
      740,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          735,
          0
        ],
        [
          733,
          0
        ]
      ]
    ],
    [
      743,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          740,
          0
        ],
        [
          742,
          0
        ]
      ]
    ],
    [
      1457,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          743,
          0
        ]
      ]
    ],
    [
      1458,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          743,
          0
        ],
        [
          1457,
          0
        ]
      ]
    ],
    [
      1459,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1458,
          0
        ]
      ]
    ],
    [
      1460,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1458,
          0
        ],
        [
          1459,
          0
        ]
      ]
    ],
    [
      751,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1460,
          0
        ],
        [
          746,
          0
        ]
      ]
    ],
    [
      753,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          751,
          0
        ]
      ]
    ],
    [
      754,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          753,
          0
        ]
      ]
    ],
    [
      755,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          754,
          0
        ],
        [
          60,
          0
        ]
      ]
    ],
    [
      757,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          756,
          0
        ],
        [
          755,
          0
        ]
      ]
    ],
    [
      758,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          698,
          0
        ],
        [
          757,
          0
        ]
      ]
    ],
    [
      797,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          75,
          0
        ]
      ]
    ],
    [
      794,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      786,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          73,
          0
        ]
      ]
    ],
    [
      783,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          71,
          0
        ]
      ]
    ],
    [
      781,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          70,
          0
        ]
      ]
    ],
    [
      761,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          760,
          0
        ]
      ]
    ],
    [
      759,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          758,
          0
        ]
      ]
    ],
    [
      762,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          759,
          0
        ],
        [
          761,
          0
        ]
      ]
    ],
    [
      763,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          762,
          0
        ]
      ]
    ],
    [
      764,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          763,
          0
        ]
      ]
    ],
    [
      765,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          764,
          0
        ]
      ]
    ],
    [
      766,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          758,
          0
        ],
        [
          765,
          0
        ]
      ]
    ],
    [
      774,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      775,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          774,
          0
        ]
      ]
    ],
    [
      771,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          770,
          0
        ]
      ]
    ],
    [
      767,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      768,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          766,
          0
        ],
        [
          767,
          0
        ]
      ]
    ],
    [
      769,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          768,
          0
        ]
      ]
    ],
    [
      772,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          769,
          0
        ],
        [
          771,
          0
        ]
      ]
    ],
    [
      773,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          772,
          0
        ]
      ]
    ],
    [
      776,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          773,
          0
        ],
        [
          775,
          0
        ]
      ]
    ],
    [
      777,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          776,
          0
        ]
      ]
    ],
    [
      778,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          777,
          0
        ]
      ]
    ],
    [
      779,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          778,
          0
        ]
      ]
    ],
    [
      780,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          766,
          0
        ],
        [
          779,
          0
        ]
      ]
    ],
    [
      782,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          780,
          0
        ],
        [
          781,
          0
        ]
      ]
    ],
    [
      784,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          782,
          0
        ],
        [
          783,
          0
        ]
      ]
    ],
    [
      785,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          784,
          0
        ],
        [
          146,
          0
        ]
      ]
    ],
    [
      787,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          786,
          0
        ],
        [
          785,
          0
        ]
      ]
    ],
    [
      791,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      788,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      789,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          787,
          0
        ],
        [
          788,
          0
        ]
      ]
    ],
    [
      790,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          789,
          0
        ]
      ]
    ],
    [
      792,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          790,
          0
        ],
        [
          791,
          0
        ]
      ]
    ],
    [
      793,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          787,
          0
        ],
        [
          792,
          0
        ]
      ]
    ],
    [
      795,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          793,
          0
        ],
        [
          794,
          0
        ]
      ]
    ],
    [
      796,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          795,
          0
        ],
        [
          26,
          0
        ]
      ]
    ],
    [
      798,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          797,
          0
        ],
        [
          796,
          0
        ]
      ]
    ],
    [
      799,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          758,
          0
        ],
        [
          798,
          0
        ]
      ]
    ],
    [
      857,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          81,
          0
        ]
      ]
    ],
    [
      827,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          79,
          0
        ]
      ]
    ],
    [
      824,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          77,
          0
        ]
      ]
    ],
    [
      822,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          76,
          0
        ]
      ]
    ],
    [
      802,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          801,
          0
        ]
      ]
    ],
    [
      800,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          799,
          0
        ]
      ]
    ],
    [
      803,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          800,
          0
        ],
        [
          802,
          0
        ]
      ]
    ],
    [
      804,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          803,
          0
        ]
      ]
    ],
    [
      805,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          804,
          0
        ]
      ]
    ],
    [
      806,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          805,
          0
        ]
      ]
    ],
    [
      807,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          799,
          0
        ],
        [
          806,
          0
        ]
      ]
    ],
    [
      815,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      816,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          815,
          0
        ]
      ]
    ],
    [
      812,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          811,
          0
        ]
      ]
    ],
    [
      808,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      809,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          807,
          0
        ],
        [
          808,
          0
        ]
      ]
    ],
    [
      810,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          809,
          0
        ]
      ]
    ],
    [
      813,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          810,
          0
        ],
        [
          812,
          0
        ]
      ]
    ],
    [
      814,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          813,
          0
        ]
      ]
    ],
    [
      817,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          814,
          0
        ],
        [
          816,
          0
        ]
      ]
    ],
    [
      818,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          817,
          0
        ]
      ]
    ],
    [
      819,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          818,
          0
        ]
      ]
    ],
    [
      820,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          819,
          0
        ]
      ]
    ],
    [
      821,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          807,
          0
        ],
        [
          820,
          0
        ]
      ]
    ],
    [
      823,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          821,
          0
        ],
        [
          822,
          0
        ]
      ]
    ],
    [
      825,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          823,
          0
        ],
        [
          824,
          0
        ]
      ]
    ],
    [
      826,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          825,
          0
        ],
        [
          104,
          0
        ]
      ]
    ],
    [
      828,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          827,
          0
        ],
        [
          826,
          0
        ]
      ]
    ],
    [
      829,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          828,
          0
        ]
      ]
    ],
    [
      832,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          829,
          0
        ]
      ]
    ],
    [
      846,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          832,
          0
        ]
      ]
    ],
    [
      847,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          846,
          0
        ]
      ]
    ],
    [
      843,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      831,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          829,
          0
        ]
      ]
    ],
    [
      833,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          831,
          0
        ]
      ]
    ],
    [
      834,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          833,
          0
        ]
      ]
    ],
    [
      830,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          829,
          0
        ]
      ]
    ],
    [
      835,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          830,
          0
        ]
      ]
    ],
    [
      836,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          835,
          0
        ]
      ]
    ],
    [
      841,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          836,
          0
        ],
        [
          834,
          0
        ]
      ]
    ],
    [
      844,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          841,
          0
        ],
        [
          843,
          0
        ]
      ]
    ],
    [
      1461,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          844,
          0
        ]
      ]
    ],
    [
      1462,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          844,
          0
        ],
        [
          1461,
          0
        ]
      ]
    ],
    [
      1463,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1462,
          0
        ]
      ]
    ],
    [
      1464,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1462,
          0
        ],
        [
          1463,
          0
        ]
      ]
    ],
    [
      852,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1464,
          0
        ],
        [
          847,
          0
        ]
      ]
    ],
    [
      854,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          852,
          0
        ]
      ]
    ],
    [
      855,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          854,
          0
        ]
      ]
    ],
    [
      856,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          855,
          0
        ],
        [
          84,
          0
        ]
      ]
    ],
    [
      858,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          857,
          0
        ],
        [
          856,
          0
        ]
      ]
    ],
    [
      859,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          799,
          0
        ],
        [
          858,
          0
        ]
      ]
    ],
    [
      898,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          87,
          0
        ]
      ]
    ],
    [
      895,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      887,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          85,
          0
        ]
      ]
    ],
    [
      884,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          83,
          0
        ]
      ]
    ],
    [
      882,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          82,
          0
        ]
      ]
    ],
    [
      862,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          861,
          0
        ]
      ]
    ],
    [
      860,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          859,
          0
        ]
      ]
    ],
    [
      863,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          860,
          0
        ],
        [
          862,
          0
        ]
      ]
    ],
    [
      864,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          863,
          0
        ]
      ]
    ],
    [
      865,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          864,
          0
        ]
      ]
    ],
    [
      866,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          865,
          0
        ]
      ]
    ],
    [
      867,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          859,
          0
        ],
        [
          866,
          0
        ]
      ]
    ],
    [
      875,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      876,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          875,
          0
        ]
      ]
    ],
    [
      872,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          871,
          0
        ]
      ]
    ],
    [
      868,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      869,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          867,
          0
        ],
        [
          868,
          0
        ]
      ]
    ],
    [
      870,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          869,
          0
        ]
      ]
    ],
    [
      873,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          870,
          0
        ],
        [
          872,
          0
        ]
      ]
    ],
    [
      874,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          873,
          0
        ]
      ]
    ],
    [
      877,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          874,
          0
        ],
        [
          876,
          0
        ]
      ]
    ],
    [
      878,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          877,
          0
        ]
      ]
    ],
    [
      879,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          878,
          0
        ]
      ]
    ],
    [
      880,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          879,
          0
        ]
      ]
    ],
    [
      881,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          867,
          0
        ],
        [
          880,
          0
        ]
      ]
    ],
    [
      883,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          881,
          0
        ],
        [
          882,
          0
        ]
      ]
    ],
    [
      885,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          883,
          0
        ],
        [
          884,
          0
        ]
      ]
    ],
    [
      886,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          885,
          0
        ],
        [
          38,
          0
        ]
      ]
    ],
    [
      888,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          887,
          0
        ],
        [
          886,
          0
        ]
      ]
    ],
    [
      892,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      889,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      890,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          888,
          0
        ],
        [
          889,
          0
        ]
      ]
    ],
    [
      891,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          890,
          0
        ]
      ]
    ],
    [
      893,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          891,
          0
        ],
        [
          892,
          0
        ]
      ]
    ],
    [
      894,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          888,
          0
        ],
        [
          893,
          0
        ]
      ]
    ],
    [
      896,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          894,
          0
        ],
        [
          895,
          0
        ]
      ]
    ],
    [
      897,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          896,
          0
        ],
        [
          183,
          0
        ]
      ]
    ],
    [
      899,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          898,
          0
        ],
        [
          897,
          0
        ]
      ]
    ],
    [
      900,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          859,
          0
        ],
        [
          899,
          0
        ]
      ]
    ],
    [
      958,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          93,
          0
        ]
      ]
    ],
    [
      928,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          91,
          0
        ]
      ]
    ],
    [
      925,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          89,
          0
        ]
      ]
    ],
    [
      923,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          88,
          0
        ]
      ]
    ],
    [
      903,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          902,
          0
        ]
      ]
    ],
    [
      901,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          900,
          0
        ]
      ]
    ],
    [
      904,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          901,
          0
        ],
        [
          903,
          0
        ]
      ]
    ],
    [
      905,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          904,
          0
        ]
      ]
    ],
    [
      906,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          905,
          0
        ]
      ]
    ],
    [
      907,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          906,
          0
        ]
      ]
    ],
    [
      908,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          900,
          0
        ],
        [
          907,
          0
        ]
      ]
    ],
    [
      916,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      917,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          916,
          0
        ]
      ]
    ],
    [
      913,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          912,
          0
        ]
      ]
    ],
    [
      909,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      910,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          908,
          0
        ],
        [
          909,
          0
        ]
      ]
    ],
    [
      911,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          910,
          0
        ]
      ]
    ],
    [
      914,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          911,
          0
        ],
        [
          913,
          0
        ]
      ]
    ],
    [
      915,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          914,
          0
        ]
      ]
    ],
    [
      918,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          915,
          0
        ],
        [
          917,
          0
        ]
      ]
    ],
    [
      919,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          918,
          0
        ]
      ]
    ],
    [
      920,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          919,
          0
        ]
      ]
    ],
    [
      921,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          920,
          0
        ]
      ]
    ],
    [
      922,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          908,
          0
        ],
        [
          921,
          0
        ]
      ]
    ],
    [
      924,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          922,
          0
        ],
        [
          923,
          0
        ]
      ]
    ],
    [
      926,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          924,
          0
        ],
        [
          925,
          0
        ]
      ]
    ],
    [
      927,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          926,
          0
        ],
        [
          8,
          0
        ]
      ]
    ],
    [
      929,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          928,
          0
        ],
        [
          927,
          0
        ]
      ]
    ],
    [
      930,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          929,
          0
        ]
      ]
    ],
    [
      933,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          930,
          0
        ]
      ]
    ],
    [
      947,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          933,
          0
        ]
      ]
    ],
    [
      948,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          947,
          0
        ]
      ]
    ],
    [
      944,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      932,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          930,
          0
        ]
      ]
    ],
    [
      934,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          932,
          0
        ]
      ]
    ],
    [
      935,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          934,
          0
        ]
      ]
    ],
    [
      931,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          930,
          0
        ]
      ]
    ],
    [
      936,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          931,
          0
        ]
      ]
    ],
    [
      937,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          936,
          0
        ]
      ]
    ],
    [
      942,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          937,
          0
        ],
        [
          935,
          0
        ]
      ]
    ],
    [
      945,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          942,
          0
        ],
        [
          944,
          0
        ]
      ]
    ],
    [
      1465,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          945,
          0
        ]
      ]
    ],
    [
      1466,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          945,
          0
        ],
        [
          1465,
          0
        ]
      ]
    ],
    [
      1467,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1466,
          0
        ]
      ]
    ],
    [
      1468,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1466,
          0
        ],
        [
          1467,
          0
        ]
      ]
    ],
    [
      953,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1468,
          0
        ],
        [
          948,
          0
        ]
      ]
    ],
    [
      955,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          953,
          0
        ]
      ]
    ],
    [
      956,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          955,
          0
        ]
      ]
    ],
    [
      957,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          956,
          0
        ],
        [
          182,
          0
        ]
      ]
    ],
    [
      959,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          958,
          0
        ],
        [
          957,
          0
        ]
      ]
    ],
    [
      960,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          900,
          0
        ],
        [
          959,
          0
        ]
      ]
    ],
    [
      999,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          99,
          0
        ]
      ]
    ],
    [
      996,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      988,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          97,
          0
        ]
      ]
    ],
    [
      985,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          95,
          0
        ]
      ]
    ],
    [
      983,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          94,
          0
        ]
      ]
    ],
    [
      963,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          962,
          0
        ]
      ]
    ],
    [
      961,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          960,
          0
        ]
      ]
    ],
    [
      964,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          961,
          0
        ],
        [
          963,
          0
        ]
      ]
    ],
    [
      965,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          964,
          0
        ]
      ]
    ],
    [
      966,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          965,
          0
        ]
      ]
    ],
    [
      967,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          966,
          0
        ]
      ]
    ],
    [
      968,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          960,
          0
        ],
        [
          967,
          0
        ]
      ]
    ],
    [
      976,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      977,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          976,
          0
        ]
      ]
    ],
    [
      973,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          972,
          0
        ]
      ]
    ],
    [
      969,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      970,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          968,
          0
        ],
        [
          969,
          0
        ]
      ]
    ],
    [
      971,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          970,
          0
        ]
      ]
    ],
    [
      974,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          971,
          0
        ],
        [
          973,
          0
        ]
      ]
    ],
    [
      975,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          974,
          0
        ]
      ]
    ],
    [
      978,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          975,
          0
        ],
        [
          977,
          0
        ]
      ]
    ],
    [
      979,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          978,
          0
        ]
      ]
    ],
    [
      980,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          979,
          0
        ]
      ]
    ],
    [
      981,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          980,
          0
        ]
      ]
    ],
    [
      982,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          968,
          0
        ],
        [
          981,
          0
        ]
      ]
    ],
    [
      984,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          982,
          0
        ],
        [
          983,
          0
        ]
      ]
    ],
    [
      986,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          984,
          0
        ],
        [
          985,
          0
        ]
      ]
    ],
    [
      987,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          986,
          0
        ],
        [
          181,
          0
        ]
      ]
    ],
    [
      989,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          988,
          0
        ],
        [
          987,
          0
        ]
      ]
    ],
    [
      993,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      990,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      991,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          989,
          0
        ],
        [
          990,
          0
        ]
      ]
    ],
    [
      992,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          991,
          0
        ]
      ]
    ],
    [
      994,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          992,
          0
        ],
        [
          993,
          0
        ]
      ]
    ],
    [
      995,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          989,
          0
        ],
        [
          994,
          0
        ]
      ]
    ],
    [
      997,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          995,
          0
        ],
        [
          996,
          0
        ]
      ]
    ],
    [
      998,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          997,
          0
        ],
        [
          180,
          0
        ]
      ]
    ],
    [
      1000,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          999,
          0
        ],
        [
          998,
          0
        ]
      ]
    ],
    [
      1001,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          960,
          0
        ],
        [
          1000,
          0
        ]
      ]
    ],
    [
      1059,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          105,
          0
        ]
      ]
    ],
    [
      1029,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          103,
          0
        ]
      ]
    ],
    [
      1026,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          101,
          0
        ]
      ]
    ],
    [
      1024,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          100,
          0
        ]
      ]
    ],
    [
      1004,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1003,
          0
        ]
      ]
    ],
    [
      1002,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1001,
          0
        ]
      ]
    ],
    [
      1005,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1002,
          0
        ],
        [
          1004,
          0
        ]
      ]
    ],
    [
      1006,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1005,
          0
        ]
      ]
    ],
    [
      1007,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1006,
          0
        ]
      ]
    ],
    [
      1008,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1007,
          0
        ]
      ]
    ],
    [
      1009,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1001,
          0
        ],
        [
          1008,
          0
        ]
      ]
    ],
    [
      1017,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1018,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1017,
          0
        ]
      ]
    ],
    [
      1014,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1013,
          0
        ]
      ]
    ],
    [
      1010,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1011,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1009,
          0
        ],
        [
          1010,
          0
        ]
      ]
    ],
    [
      1012,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1011,
          0
        ]
      ]
    ],
    [
      1015,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1012,
          0
        ],
        [
          1014,
          0
        ]
      ]
    ],
    [
      1016,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1015,
          0
        ]
      ]
    ],
    [
      1019,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1016,
          0
        ],
        [
          1018,
          0
        ]
      ]
    ],
    [
      1020,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1019,
          0
        ]
      ]
    ],
    [
      1021,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1020,
          0
        ]
      ]
    ],
    [
      1022,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1021,
          0
        ]
      ]
    ],
    [
      1023,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1009,
          0
        ],
        [
          1022,
          0
        ]
      ]
    ],
    [
      1025,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1023,
          0
        ],
        [
          1024,
          0
        ]
      ]
    ],
    [
      1027,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1025,
          0
        ],
        [
          1026,
          0
        ]
      ]
    ],
    [
      1028,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          1027,
          0
        ],
        [
          86,
          0
        ]
      ]
    ],
    [
      1030,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          1029,
          0
        ],
        [
          1028,
          0
        ]
      ]
    ],
    [
      1031,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1030,
          0
        ]
      ]
    ],
    [
      1034,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1031,
          0
        ]
      ]
    ],
    [
      1048,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          1034,
          0
        ]
      ]
    ],
    [
      1049,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1048,
          0
        ]
      ]
    ],
    [
      1045,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      1033,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1031,
          0
        ]
      ]
    ],
    [
      1035,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1033,
          0
        ]
      ]
    ],
    [
      1036,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          1035,
          0
        ]
      ]
    ],
    [
      1032,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1031,
          0
        ]
      ]
    ],
    [
      1037,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          1032,
          0
        ]
      ]
    ],
    [
      1038,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1037,
          0
        ]
      ]
    ],
    [
      1043,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          1038,
          0
        ],
        [
          1036,
          0
        ]
      ]
    ],
    [
      1046,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          1043,
          0
        ],
        [
          1045,
          0
        ]
      ]
    ],
    [
      1469,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1046,
          0
        ]
      ]
    ],
    [
      1470,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1046,
          0
        ],
        [
          1469,
          0
        ]
      ]
    ],
    [
      1471,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1470,
          0
        ]
      ]
    ],
    [
      1472,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1470,
          0
        ],
        [
          1471,
          0
        ]
      ]
    ],
    [
      1054,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1472,
          0
        ],
        [
          1049,
          0
        ]
      ]
    ],
    [
      1056,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          1054,
          0
        ]
      ]
    ],
    [
      1057,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1056,
          0
        ]
      ]
    ],
    [
      1058,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          1057,
          0
        ],
        [
          179,
          0
        ]
      ]
    ],
    [
      1060,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1059,
          0
        ],
        [
          1058,
          0
        ]
      ]
    ],
    [
      1061,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1001,
          0
        ],
        [
          1060,
          0
        ]
      ]
    ],
    [
      1100,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          111,
          0
        ]
      ]
    ],
    [
      1097,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      1089,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          109,
          0
        ]
      ]
    ],
    [
      1086,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          107,
          0
        ]
      ]
    ],
    [
      1084,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          106,
          0
        ]
      ]
    ],
    [
      1064,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1063,
          0
        ]
      ]
    ],
    [
      1062,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1061,
          0
        ]
      ]
    ],
    [
      1065,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1062,
          0
        ],
        [
          1064,
          0
        ]
      ]
    ],
    [
      1066,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1065,
          0
        ]
      ]
    ],
    [
      1067,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1066,
          0
        ]
      ]
    ],
    [
      1068,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1067,
          0
        ]
      ]
    ],
    [
      1069,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1061,
          0
        ],
        [
          1068,
          0
        ]
      ]
    ],
    [
      1077,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1078,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1077,
          0
        ]
      ]
    ],
    [
      1074,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1073,
          0
        ]
      ]
    ],
    [
      1070,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1071,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1069,
          0
        ],
        [
          1070,
          0
        ]
      ]
    ],
    [
      1072,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1071,
          0
        ]
      ]
    ],
    [
      1075,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1072,
          0
        ],
        [
          1074,
          0
        ]
      ]
    ],
    [
      1076,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1075,
          0
        ]
      ]
    ],
    [
      1079,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1076,
          0
        ],
        [
          1078,
          0
        ]
      ]
    ],
    [
      1080,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1079,
          0
        ]
      ]
    ],
    [
      1081,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1080,
          0
        ]
      ]
    ],
    [
      1082,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1081,
          0
        ]
      ]
    ],
    [
      1083,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1069,
          0
        ],
        [
          1082,
          0
        ]
      ]
    ],
    [
      1085,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1083,
          0
        ],
        [
          1084,
          0
        ]
      ]
    ],
    [
      1087,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1085,
          0
        ],
        [
          1086,
          0
        ]
      ]
    ],
    [
      1088,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          1087,
          0
        ],
        [
          178,
          0
        ]
      ]
    ],
    [
      1090,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          1089,
          0
        ],
        [
          1088,
          0
        ]
      ]
    ],
    [
      1094,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      1091,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      1092,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          1090,
          0
        ],
        [
          1091,
          0
        ]
      ]
    ],
    [
      1093,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          1092,
          0
        ]
      ]
    ],
    [
      1095,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          1093,
          0
        ],
        [
          1094,
          0
        ]
      ]
    ],
    [
      1096,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          1090,
          0
        ],
        [
          1095,
          0
        ]
      ]
    ],
    [
      1098,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          1096,
          0
        ],
        [
          1097,
          0
        ]
      ]
    ],
    [
      1099,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          1098,
          0
        ],
        [
          177,
          0
        ]
      ]
    ],
    [
      1101,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1100,
          0
        ],
        [
          1099,
          0
        ]
      ]
    ],
    [
      1102,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1061,
          0
        ],
        [
          1101,
          0
        ]
      ]
    ],
    [
      1160,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          117,
          0
        ]
      ]
    ],
    [
      1130,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          115,
          0
        ]
      ]
    ],
    [
      1127,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          113,
          0
        ]
      ]
    ],
    [
      1125,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          112,
          0
        ]
      ]
    ],
    [
      1105,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1104,
          0
        ]
      ]
    ],
    [
      1103,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1102,
          0
        ]
      ]
    ],
    [
      1106,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1103,
          0
        ],
        [
          1105,
          0
        ]
      ]
    ],
    [
      1107,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1106,
          0
        ]
      ]
    ],
    [
      1108,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1107,
          0
        ]
      ]
    ],
    [
      1109,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1108,
          0
        ]
      ]
    ],
    [
      1110,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1102,
          0
        ],
        [
          1109,
          0
        ]
      ]
    ],
    [
      1118,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1119,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1118,
          0
        ]
      ]
    ],
    [
      1115,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1114,
          0
        ]
      ]
    ],
    [
      1111,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1112,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1110,
          0
        ],
        [
          1111,
          0
        ]
      ]
    ],
    [
      1113,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1112,
          0
        ]
      ]
    ],
    [
      1116,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1113,
          0
        ],
        [
          1115,
          0
        ]
      ]
    ],
    [
      1117,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1116,
          0
        ]
      ]
    ],
    [
      1120,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1117,
          0
        ],
        [
          1119,
          0
        ]
      ]
    ],
    [
      1121,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1120,
          0
        ]
      ]
    ],
    [
      1122,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1121,
          0
        ]
      ]
    ],
    [
      1123,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1122,
          0
        ]
      ]
    ],
    [
      1124,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1110,
          0
        ],
        [
          1123,
          0
        ]
      ]
    ],
    [
      1126,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1124,
          0
        ],
        [
          1125,
          0
        ]
      ]
    ],
    [
      1128,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1126,
          0
        ],
        [
          1127,
          0
        ]
      ]
    ],
    [
      1129,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          1128,
          0
        ],
        [
          154,
          0
        ]
      ]
    ],
    [
      1131,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          1130,
          0
        ],
        [
          1129,
          0
        ]
      ]
    ],
    [
      1132,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1131,
          0
        ]
      ]
    ],
    [
      1135,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1132,
          0
        ]
      ]
    ],
    [
      1149,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          1135,
          0
        ]
      ]
    ],
    [
      1150,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1149,
          0
        ]
      ]
    ],
    [
      1146,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      1134,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1132,
          0
        ]
      ]
    ],
    [
      1136,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1134,
          0
        ]
      ]
    ],
    [
      1137,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          1136,
          0
        ]
      ]
    ],
    [
      1133,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1132,
          0
        ]
      ]
    ],
    [
      1138,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          1133,
          0
        ]
      ]
    ],
    [
      1139,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1138,
          0
        ]
      ]
    ],
    [
      1144,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          1139,
          0
        ],
        [
          1137,
          0
        ]
      ]
    ],
    [
      1147,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          1144,
          0
        ],
        [
          1146,
          0
        ]
      ]
    ],
    [
      1473,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1147,
          0
        ]
      ]
    ],
    [
      1474,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1147,
          0
        ],
        [
          1473,
          0
        ]
      ]
    ],
    [
      1475,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1474,
          0
        ]
      ]
    ],
    [
      1476,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1474,
          0
        ],
        [
          1475,
          0
        ]
      ]
    ],
    [
      1155,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1476,
          0
        ],
        [
          1150,
          0
        ]
      ]
    ],
    [
      1157,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          1155,
          0
        ]
      ]
    ],
    [
      1158,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1157,
          0
        ]
      ]
    ],
    [
      1159,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          1158,
          0
        ],
        [
          176,
          0
        ]
      ]
    ],
    [
      1161,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1160,
          0
        ],
        [
          1159,
          0
        ]
      ]
    ],
    [
      1162,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1102,
          0
        ],
        [
          1161,
          0
        ]
      ]
    ],
    [
      1201,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          123,
          0
        ]
      ]
    ],
    [
      1198,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      1190,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          121,
          0
        ]
      ]
    ],
    [
      1187,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          119,
          0
        ]
      ]
    ],
    [
      1185,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          118,
          0
        ]
      ]
    ],
    [
      1165,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1164,
          0
        ]
      ]
    ],
    [
      1163,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1162,
          0
        ]
      ]
    ],
    [
      1166,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1163,
          0
        ],
        [
          1165,
          0
        ]
      ]
    ],
    [
      1167,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1166,
          0
        ]
      ]
    ],
    [
      1168,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1167,
          0
        ]
      ]
    ],
    [
      1169,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1168,
          0
        ]
      ]
    ],
    [
      1170,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1162,
          0
        ],
        [
          1169,
          0
        ]
      ]
    ],
    [
      1178,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1179,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1178,
          0
        ]
      ]
    ],
    [
      1175,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1174,
          0
        ]
      ]
    ],
    [
      1171,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1172,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1170,
          0
        ],
        [
          1171,
          0
        ]
      ]
    ],
    [
      1173,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1172,
          0
        ]
      ]
    ],
    [
      1176,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1173,
          0
        ],
        [
          1175,
          0
        ]
      ]
    ],
    [
      1177,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1176,
          0
        ]
      ]
    ],
    [
      1180,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1177,
          0
        ],
        [
          1179,
          0
        ]
      ]
    ],
    [
      1181,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1180,
          0
        ]
      ]
    ],
    [
      1182,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1181,
          0
        ]
      ]
    ],
    [
      1183,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1182,
          0
        ]
      ]
    ],
    [
      1184,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1170,
          0
        ],
        [
          1183,
          0
        ]
      ]
    ],
    [
      1186,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1184,
          0
        ],
        [
          1185,
          0
        ]
      ]
    ],
    [
      1188,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1186,
          0
        ],
        [
          1187,
          0
        ]
      ]
    ],
    [
      1189,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          1188,
          0
        ],
        [
          175,
          0
        ]
      ]
    ],
    [
      1191,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          1190,
          0
        ],
        [
          1189,
          0
        ]
      ]
    ],
    [
      1195,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      1192,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      1193,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          1191,
          0
        ],
        [
          1192,
          0
        ]
      ]
    ],
    [
      1194,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          1193,
          0
        ]
      ]
    ],
    [
      1196,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          1194,
          0
        ],
        [
          1195,
          0
        ]
      ]
    ],
    [
      1197,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          1191,
          0
        ],
        [
          1196,
          0
        ]
      ]
    ],
    [
      1199,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          1197,
          0
        ],
        [
          1198,
          0
        ]
      ]
    ],
    [
      1200,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          1199,
          0
        ],
        [
          174,
          0
        ]
      ]
    ],
    [
      1202,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1201,
          0
        ],
        [
          1200,
          0
        ]
      ]
    ],
    [
      1203,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1162,
          0
        ],
        [
          1202,
          0
        ]
      ]
    ],
    [
      1261,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          129,
          0
        ]
      ]
    ],
    [
      1231,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          127,
          0
        ]
      ]
    ],
    [
      1228,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          125,
          0
        ]
      ]
    ],
    [
      1226,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          124,
          0
        ]
      ]
    ],
    [
      1206,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1205,
          0
        ]
      ]
    ],
    [
      1204,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1203,
          0
        ]
      ]
    ],
    [
      1207,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1204,
          0
        ],
        [
          1206,
          0
        ]
      ]
    ],
    [
      1208,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1207,
          0
        ]
      ]
    ],
    [
      1209,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1208,
          0
        ]
      ]
    ],
    [
      1210,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1209,
          0
        ]
      ]
    ],
    [
      1211,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1203,
          0
        ],
        [
          1210,
          0
        ]
      ]
    ],
    [
      1219,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1220,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1219,
          0
        ]
      ]
    ],
    [
      1216,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1215,
          0
        ]
      ]
    ],
    [
      1212,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1213,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1211,
          0
        ],
        [
          1212,
          0
        ]
      ]
    ],
    [
      1214,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1213,
          0
        ]
      ]
    ],
    [
      1217,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1214,
          0
        ],
        [
          1216,
          0
        ]
      ]
    ],
    [
      1218,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1217,
          0
        ]
      ]
    ],
    [
      1221,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1218,
          0
        ],
        [
          1220,
          0
        ]
      ]
    ],
    [
      1222,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1221,
          0
        ]
      ]
    ],
    [
      1223,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1222,
          0
        ]
      ]
    ],
    [
      1224,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1223,
          0
        ]
      ]
    ],
    [
      1225,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1211,
          0
        ],
        [
          1224,
          0
        ]
      ]
    ],
    [
      1227,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1225,
          0
        ],
        [
          1226,
          0
        ]
      ]
    ],
    [
      1229,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1227,
          0
        ],
        [
          1228,
          0
        ]
      ]
    ],
    [
      1230,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          1229,
          0
        ],
        [
          30,
          0
        ]
      ]
    ],
    [
      1232,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          1231,
          0
        ],
        [
          1230,
          0
        ]
      ]
    ],
    [
      1233,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1232,
          0
        ]
      ]
    ],
    [
      1236,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1233,
          0
        ]
      ]
    ],
    [
      1250,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          1236,
          0
        ]
      ]
    ],
    [
      1251,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1250,
          0
        ]
      ]
    ],
    [
      1247,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      1235,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1233,
          0
        ]
      ]
    ],
    [
      1237,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1235,
          0
        ]
      ]
    ],
    [
      1238,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          1237,
          0
        ]
      ]
    ],
    [
      1234,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1233,
          0
        ]
      ]
    ],
    [
      1239,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          1234,
          0
        ]
      ]
    ],
    [
      1240,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1239,
          0
        ]
      ]
    ],
    [
      1245,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          1240,
          0
        ],
        [
          1238,
          0
        ]
      ]
    ],
    [
      1248,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          1245,
          0
        ],
        [
          1247,
          0
        ]
      ]
    ],
    [
      1477,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1248,
          0
        ]
      ]
    ],
    [
      1478,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1248,
          0
        ],
        [
          1477,
          0
        ]
      ]
    ],
    [
      1479,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1478,
          0
        ]
      ]
    ],
    [
      1480,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1478,
          0
        ],
        [
          1479,
          0
        ]
      ]
    ],
    [
      1256,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1480,
          0
        ],
        [
          1251,
          0
        ]
      ]
    ],
    [
      1258,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          1256,
          0
        ]
      ]
    ],
    [
      1259,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1258,
          0
        ]
      ]
    ],
    [
      1260,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          1259,
          0
        ],
        [
          173,
          0
        ]
      ]
    ],
    [
      1262,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1261,
          0
        ],
        [
          1260,
          0
        ]
      ]
    ],
    [
      1263,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1203,
          0
        ],
        [
          1262,
          0
        ]
      ]
    ],
    [
      1302,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          135,
          0
        ]
      ]
    ],
    [
      1299,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      1291,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          133,
          0
        ]
      ]
    ],
    [
      1288,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          131,
          0
        ]
      ]
    ],
    [
      1286,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          130,
          0
        ]
      ]
    ],
    [
      1266,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1265,
          0
        ]
      ]
    ],
    [
      1264,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1263,
          0
        ]
      ]
    ],
    [
      1267,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1264,
          0
        ],
        [
          1266,
          0
        ]
      ]
    ],
    [
      1268,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1267,
          0
        ]
      ]
    ],
    [
      1269,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1268,
          0
        ]
      ]
    ],
    [
      1270,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1269,
          0
        ]
      ]
    ],
    [
      1271,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1263,
          0
        ],
        [
          1270,
          0
        ]
      ]
    ],
    [
      1279,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1280,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1279,
          0
        ]
      ]
    ],
    [
      1276,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1275,
          0
        ]
      ]
    ],
    [
      1272,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1273,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1271,
          0
        ],
        [
          1272,
          0
        ]
      ]
    ],
    [
      1274,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1273,
          0
        ]
      ]
    ],
    [
      1277,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1274,
          0
        ],
        [
          1276,
          0
        ]
      ]
    ],
    [
      1278,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1277,
          0
        ]
      ]
    ],
    [
      1281,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1278,
          0
        ],
        [
          1280,
          0
        ]
      ]
    ],
    [
      1282,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1281,
          0
        ]
      ]
    ],
    [
      1283,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1282,
          0
        ]
      ]
    ],
    [
      1284,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1283,
          0
        ]
      ]
    ],
    [
      1285,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1271,
          0
        ],
        [
          1284,
          0
        ]
      ]
    ],
    [
      1287,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1285,
          0
        ],
        [
          1286,
          0
        ]
      ]
    ],
    [
      1289,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1287,
          0
        ],
        [
          1288,
          0
        ]
      ]
    ],
    [
      1290,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          1289,
          0
        ],
        [
          172,
          0
        ]
      ]
    ],
    [
      1292,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          1291,
          0
        ],
        [
          1290,
          0
        ]
      ]
    ],
    [
      1296,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      1293,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      1294,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          1292,
          0
        ],
        [
          1293,
          0
        ]
      ]
    ],
    [
      1295,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          1294,
          0
        ]
      ]
    ],
    [
      1297,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          1295,
          0
        ],
        [
          1296,
          0
        ]
      ]
    ],
    [
      1298,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          1292,
          0
        ],
        [
          1297,
          0
        ]
      ]
    ],
    [
      1300,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          1298,
          0
        ],
        [
          1299,
          0
        ]
      ]
    ],
    [
      1301,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          1300,
          0
        ],
        [
          171,
          0
        ]
      ]
    ],
    [
      1303,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1302,
          0
        ],
        [
          1301,
          0
        ]
      ]
    ],
    [
      1304,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1263,
          0
        ],
        [
          1303,
          0
        ]
      ]
    ],
    [
      1362,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          141,
          0
        ]
      ]
    ],
    [
      1332,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1152]} })  ",
      "Broadcast",
      [
        [
          139,
          0
        ]
      ]
    ],
    [
      1329,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          137,
          0
        ]
      ]
    ],
    [
      1327,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          136,
          0
        ]
      ]
    ],
    [
      1307,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1306,
          0
        ]
      ]
    ],
    [
      1305,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1304,
          0
        ]
      ]
    ],
    [
      1308,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1305,
          0
        ],
        [
          1307,
          0
        ]
      ]
    ],
    [
      1309,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1308,
          0
        ]
      ]
    ],
    [
      1310,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1309,
          0
        ]
      ]
    ],
    [
      1311,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1310,
          0
        ]
      ]
    ],
    [
      1312,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1304,
          0
        ],
        [
          1311,
          0
        ]
      ]
    ],
    [
      1320,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1321,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1320,
          0
        ]
      ]
    ],
    [
      1317,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1316,
          0
        ]
      ]
    ],
    [
      1313,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1314,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1312,
          0
        ],
        [
          1313,
          0
        ]
      ]
    ],
    [
      1315,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1314,
          0
        ]
      ]
    ],
    [
      1318,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1315,
          0
        ],
        [
          1317,
          0
        ]
      ]
    ],
    [
      1319,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1318,
          0
        ]
      ]
    ],
    [
      1322,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1319,
          0
        ],
        [
          1321,
          0
        ]
      ]
    ],
    [
      1323,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1322,
          0
        ]
      ]
    ],
    [
      1324,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1323,
          0
        ]
      ]
    ],
    [
      1325,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1324,
          0
        ]
      ]
    ],
    [
      1326,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1312,
          0
        ],
        [
          1325,
          0
        ]
      ]
    ],
    [
      1328,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1326,
          0
        ],
        [
          1327,
          0
        ]
      ]
    ],
    [
      1330,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1328,
          0
        ],
        [
          1329,
          0
        ]
      ]
    ],
    [
      1331,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1152]} })  ",
      "Dot",
      [
        [
          1330,
          0
        ],
        [
          78,
          0
        ]
      ]
    ],
    [
      1333,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} })  ",
      "Add",
      [
        [
          1332,
          0
        ],
        [
          1331,
          0
        ]
      ]
    ],
    [
      1334,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0, N1, (((N2) * 6 + N3) * 64 + N4)] where N2 in 3, N3 in 6, N4 in 64;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1152]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1333,
          0
        ]
      ]
    ],
    [
      1337,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 2, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1334,
          0
        ]
      ]
    ],
    [
      1351,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          1337,
          0
        ]
      ]
    ],
    [
      1352,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1351,
          0
        ]
      ]
    ],
    [
      1348,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0] where N0 in 16, N1 in 6, N2 in 50, N3 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          153,
          0
        ]
      ]
    ],
    [
      1336,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 1, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1334,
          0
        ]
      ]
    ],
    [
      1338,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, 0, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1336,
          0
        ]
      ]
    ],
    [
      1339,
      " - einstein_v2(\" output0[N0, N2, N3, N1] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} })  ",
      "Reshape",
      [
        [
          1338,
          0
        ]
      ]
    ],
    [
      1335,
      " - einstein_v2(\" output0[N0, N1, N2, N3, N4] = input0[N0 + 0, N1 + 0, N2 + 0, N3 + 0, N4 + 0] where N0 in 16 , N1 in 50 , N2 in 1 , N3 in 6 , N4 in 64; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 3, 6, 64]} })  ",
      "Slice",
      [
        [
          1334,
          0
        ]
      ]
    ],
    [
      1340,
      " - einstein_v2(\" output0[N2, N0, N3, N1, N4] = input0[N0, N1, N2, N3, N4] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1, 6, 64]} })  ",
      "Reshape",
      [
        [
          1335,
          0
        ]
      ]
    ],
    [
      1341,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[0, N0, N1, N2, N3] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1, 16, 6, 50, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1340,
          0
        ]
      ]
    ],
    [
      1346,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 64, 50]} })  ",
      "BatchMatMul",
      [
        [
          1341,
          0
        ],
        [
          1339,
          0
        ]
      ]
    ],
    [
      1349,
      " - einstein_v2(\"output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] * input1[N0, N1, N2, N3];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "Multiply",
      [
        [
          1346,
          0
        ],
        [
          1348,
          0
        ]
      ]
    ],
    [
      1481,
      " - einstein_v2(\" output0[N0, N1, N2] >=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1349,
          0
        ]
      ]
    ],
    [
      1482,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = (input0[N0, N1, N2, N3] - input1[N0, N1, N2]).call(`exp`); \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1349,
          0
        ],
        [
          1481,
          0
        ]
      ]
    ],
    [
      1483,
      " - einstein_v2(\" output0[N0, N1, N2] +=! input0[N0, N1, N2, N3]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1482,
          0
        ]
      ]
    ],
    [
      1484,
      " - einstein_v2(\" output0[N0, N1, N2, N3] = input0[N0, N1, N2, N3] / input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50]} })  ",
      "SoftmaxBasic",
      [
        [
          1482,
          0
        ],
        [
          1483,
          0
        ]
      ]
    ],
    [
      1357,
      " - einstein_v2(\" output0[B0, B1, N, M] +=! input0[B0, B1, N, K] * input1[B0, B1, K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "BatchMatMul",
      [
        [
          1484,
          0
        ],
        [
          1352,
          0
        ]
      ]
    ],
    [
      1359,
      " - einstein_v2(\" output0[N0, N2, N1, N3] = input0[N0, N1, N2, N3] ; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 6, 50, 64]} })  ",
      "Reshape",
      [
        [
          1357,
          0
        ]
      ]
    ],
    [
      1360,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2 / 64 % 6, N2 / 1 % 64] where N2 in 384;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 6, 64]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1359,
          0
        ]
      ]
    ],
    [
      1361,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 384]} })  ",
      "Dot",
      [
        [
          1360,
          0
        ],
        [
          170,
          0
        ]
      ]
    ],
    [
      1363,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1362,
          0
        ],
        [
          1361,
          0
        ]
      ]
    ],
    [
      1364,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1304,
          0
        ],
        [
          1363,
          0
        ]
      ]
    ],
    [
      1403,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          147,
          0
        ]
      ]
    ],
    [
      1400,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          159,
          0
        ]
      ]
    ],
    [
      1392,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1536]} })  ",
      "Broadcast",
      [
        [
          145,
          0
        ]
      ]
    ],
    [
      1389,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          143,
          0
        ]
      ]
    ],
    [
      1387,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [384]} })  ",
      "Broadcast",
      [
        [
          142,
          0
        ]
      ]
    ],
    [
      1367,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1366,
          0
        ]
      ]
    ],
    [
      1365,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1364,
          0
        ]
      ]
    ],
    [
      1368,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1365,
          0
        ],
        [
          1367,
          0
        ]
      ]
    ],
    [
      1369,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1368,
          0
        ]
      ]
    ],
    [
      1370,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1369,
          0
        ]
      ]
    ],
    [
      1371,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1370,
          0
        ]
      ]
    ],
    [
      1372,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1364,
          0
        ],
        [
          1371,
          0
        ]
      ]
    ],
    [
      1380,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1381,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1380,
          0
        ]
      ]
    ],
    [
      1377,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1376,
          0
        ]
      ]
    ],
    [
      1373,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1374,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1372,
          0
        ],
        [
          1373,
          0
        ]
      ]
    ],
    [
      1375,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1374,
          0
        ]
      ]
    ],
    [
      1378,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1375,
          0
        ],
        [
          1377,
          0
        ]
      ]
    ],
    [
      1379,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1378,
          0
        ]
      ]
    ],
    [
      1382,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1379,
          0
        ],
        [
          1381,
          0
        ]
      ]
    ],
    [
      1383,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1382,
          0
        ]
      ]
    ],
    [
      1384,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1383,
          0
        ]
      ]
    ],
    [
      1385,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1384,
          0
        ]
      ]
    ],
    [
      1386,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1372,
          0
        ],
        [
          1385,
          0
        ]
      ]
    ],
    [
      1388,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1386,
          0
        ],
        [
          1387,
          0
        ]
      ]
    ],
    [
      1390,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1388,
          0
        ],
        [
          1389,
          0
        ]
      ]
    ],
    [
      1391,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [384, 1536]} })  ",
      "Dot",
      [
        [
          1390,
          0
        ],
        [
          169,
          0
        ]
      ]
    ],
    [
      1393,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          1392,
          0
        ],
        [
          1391,
          0
        ]
      ]
    ],
    [
      1397,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          157,
          0
        ]
      ]
    ],
    [
      1394,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 1536; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          155,
          0
        ]
      ]
    ],
    [
      1395,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Divide",
      [
        [
          1393,
          0
        ],
        [
          1394,
          0
        ]
      ]
    ],
    [
      1396,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`erf`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Erf",
      [
        [
          1395,
          0
        ]
      ]
    ],
    [
      1398,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Add",
      [
        [
          1396,
          0
        ],
        [
          1397,
          0
        ]
      ]
    ],
    [
      1399,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          1393,
          0
        ],
        [
          1398,
          0
        ]
      ]
    ],
    [
      1401,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} })  ",
      "Multiply",
      [
        [
          1399,
          0
        ],
        [
          1400,
          0
        ]
      ]
    ],
    [
      1402,
      " - einstein_v2(\" output0[S0, N, M] +=! input0[S0, N, K] * input1[K, M]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1536]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1536, 384]} })  ",
      "Dot",
      [
        [
          1401,
          0
        ],
        [
          168,
          0
        ]
      ]
    ],
    [
      1404,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1403,
          0
        ],
        [
          1402,
          0
        ]
      ]
    ],
    [
      1405,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1364,
          0
        ],
        [
          1404,
          0
        ]
      ]
    ],
    [
      1408,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1407,
          0
        ]
      ]
    ],
    [
      1406,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1405,
          0
        ]
      ]
    ],
    [
      1409,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1406,
          0
        ],
        [
          1408,
          0
        ]
      ]
    ],
    [
      1410,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1409,
          0
        ]
      ]
    ],
    [
      1411,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1410,
          0
        ]
      ]
    ],
    [
      1412,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1411,
          0
        ]
      ]
    ],
    [
      1413,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] - input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Subtract",
      [
        [
          1405,
          0
        ],
        [
          1412,
          0
        ]
      ]
    ],
    [
      1421,
      " - einstein_v2(\" output0[N0] = input0[0] where N0 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          156,
          0
        ]
      ]
    ],
    [
      1422,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N2] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1421,
          0
        ]
      ]
    ],
    [
      1418,
      " - einstein_v2(\" output0[N0, N1] = input0[0] where N0 in 16, N1 in 50; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          1417,
          0
        ]
      ]
    ],
    [
      1414,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[0] where N0 in 16, N1 in 50, N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [1]} })  ",
      "Broadcast",
      [
        [
          158,
          0
        ]
      ]
    ],
    [
      1415,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`pow`, [input1[N0, N1, N2]]);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Power",
      [
        [
          1413,
          0
        ],
        [
          1414,
          0
        ]
      ]
    ],
    [
      1416,
      " - einstein_v2(\"output0[N0, N1] +=! input0[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Sum",
      [
        [
          1415,
          0
        ]
      ]
    ],
    [
      1419,
      " - einstein_v2(\"output0[N0, N1] = input0[N0, N1] / input1[N0, N1];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Divide",
      [
        [
          1416,
          0
        ],
        [
          1418,
          0
        ]
      ]
    ],
    [
      1420,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 1;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1419,
          0
        ]
      ]
    ],
    [
      1423,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Add",
      [
        [
          1420,
          0
        ],
        [
          1422,
          0
        ]
      ]
    ],
    [
      1424,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2].call(`sqrt`);\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} })  ",
      "Sqrt",
      [
        [
          1423,
          0
        ]
      ]
    ],
    [
      1425,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1, 0] ;  \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 1]} }) ## @: memcpy ",
      "Reshape",
      [
        [
          1424,
          0
        ]
      ]
    ],
    [
      1426,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1] where N2 in 384; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50]} })  ",
      "Broadcast",
      [
        [
          1425,
          0
        ]
      ]
    ],
    [
      1427,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] / input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Divide",
      [
        [
          1413,
          0
        ],
        [
          1426,
          0
        ]
      ]
    ],
    [
      1429,
      " - einstein_v2(\"output0[N0, N1, N2] = input0[N0, N1, N2] * input1[N0, N1, N2];\", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Multiply",
      [
        [
          1427,
          0
        ],
        [
          1428,
          0
        ]
      ]
    ],
    [
      1431,
      " - einstein_v2(\" output0[N0, N1, N2] = input0[N0, N1, N2] + input1[N0, N1, N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} })  ",
      "Add",
      [
        [
          1429,
          0
        ],
        [
          1430,
          0
        ]
      ]
    ],
    [
      1432,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, G3, N1] g input1[N2]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 50, 384]} ,  \"input1\" : { \"dtype\" : \"int64\", \"shape\" : [1]} })  ",
      "GatherV2",
      [
        [
          1431,
          0
        ],
        [
          163,
          0
        ]
      ]
    ],
    [
      1433,
      " - einstein_v2(\" output0[N, M] +=! input0[N, K] * input1[M, K]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 384]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [1000, 384]} })  ",
      "Dot",
      [
        [
          1432,
          0
        ],
        [
          150,
          0
        ]
      ]
    ],
    [
      1435,
      " - einstein_v2(\" output0[N0, N1] = input0[N0, N1] + input1[N0, N1]; \", input_dict={ \"input0\" : { \"dtype\" : \"float32\", \"shape\" : [16, 1000]} ,  \"input1\" : { \"dtype\" : \"float32\", \"shape\" : [16, 1000]} })  ",
      "Add",
      [
        [
          1433,
          0
        ],
        [
          1434,
          0
        ]
      ]
    ],
    [
      1436,
      "",
      "Result",
      [
        [
          1435,
          0
        ]
      ]
    ]
  ]